plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {
        applicationId "com.byl.mvvm"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode Integer.valueOf(project.versionCode)
        versionName project.versionName
        flavorDimensions versionName
    }

    buildTypes {
        debug {
            crunchPngs false // 关闭 crunchPng 优化, 以加快构建
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        incremental = true  // 开启增量编译
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    // 优化编译速度
    // 优化 `transformClassDexBuilderForDebug` 的速度
    dexOptions {
        dexInProcess true
        preDexLibraries true
        maxProcessCount 8
    }

    buildFeatures {
        viewBinding = true
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    // 跳过 Lint 和 Test 相关的 task, 以加速编译
    if (isDebug()) {
        gradle.taskGraph.whenReady {
            tasks.each { task ->
                if (task.name.contains("Test") || task.name.contains("Lint")) {
                    task.enabled = false
                }
            }
        }
    }
}

// 优化编译速度，如果有用到 kapt 添加如下配置
kapt {
    useBuildCache = true
    javacOptions {
        option("-Xmaxerrs", 500)
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    api project(path: ':AF-MVVM')
    implementation rootProject.ext.dependencies["glide"]
    implementation(rootProject.ext.dependencies["glide-loader-okhttp3"]) {
        exclude module: 'annotation'
        exclude module: 'fragment'
        exclude module: 'okhttp'
    }
    implementation rootProject.ext.dependencies["PersistentCookieJar"]
    implementation rootProject.ext.dependencies["smart_refresh_layout"]
    implementation rootProject.ext.dependencies["smart_refresh_header"]
    implementation rootProject.ext.dependencies["eventbus"]
    implementation rootProject.ext.dependencies["anko"]
}